image: docker

stages:
  - build
  - deploy


variables:
  BRANCH_NAME: "$CI_COMMIT_REF_NAME_$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"

build:
  stage: build

  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: '$CI_COMMIT_BRANCH =~ /^release/'
      when: never
    - if: $CI_COMMIT_BRANCH

  script:
    - echo "$BRANCH_NAME"
    - echo "$CI_COMMIT_REF_NAME"
    - echo "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
    - echo "$BRANCH_NAME_$CI_COMMIT_BEFORE_SHA"
    - echo "$CI_REGISTRY_IMAGE:$BRANCH_NAME_$CI_COMMIT_BEFORE_SHA"
    - docker build -t "$CI_REGISTRY_IMAGE:$BRANCH_NAME_$CI_COMMIT_BEFORE_SHA" .
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push "$CI_REGISTRY_IMAGE:$BRANCH_NAME_$CI_COMMIT_BEFORE_SHA"

build_version:
  stage: build

  rules:     
    - if: '$CI_COMMIT_BRANCH !~ /^release/'
      when: never
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH
  script:
    - echo ${CI_REGISTRY_IMAGE}:${BRANCH_NAME}
    - docker build -t ${CI_REGISTRY_IMAGE}:${BRANCH_NAME} .
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker push ${CI_REGISTRY_IMAGE}:${BRANCH_NAME}

deploy:
  stage: deploy
  only:
    - tags
  when: manual
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - echo ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}